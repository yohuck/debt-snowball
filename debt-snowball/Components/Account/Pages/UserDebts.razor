@rendermode InteractiveServer
@using System.ComponentModel.DataAnnotations

@using debt_snowball.Data
@inject ApplicationDbContext DbContexty




@if (Debts != null && Debts.Any())
{
    <table class="table-auto text-xs md:text-lg w-[100%] text-left bg-blue-100 p-8 text-blue-950">
        <thead class="bg-blue-950 text-gray-200">
            <tr>
                <th class="p-2">Name</th>
                <th>Rate (%)</th>
                <th>Balance ($)</th>
                <th>Min Payment ($)</th>
                <th>Due Date</th>
            </tr>
        </thead>
        <tbody class="[&>*:nth-child(even)]:bg-gray-100">
            @foreach (var debt in Debts)
            {
                <tr>
                    <td class="p-2 max-w-[120px] overflow-auto">@debt.Name</td>
                    <td>@debt.Rate</td>
                    <td>@debt.Balance</td>
                    <td>@debt.MinimumPayment</td>
                    <td>@debt.DueDay</td>
                </tr>
            }
        </tbody>
    </table>
}
else
{
    <p>No debts found.</p>
}



@code {
    [Parameter]
    public string user { get; set; } = default!;

    [Parameter]
    public int extraPayment { get; set; } = 0;

    [Parameter]
    public string Label { get; set; } = "Extra Payment";


    public List<Debt> Debts { get; set; } = default!;

  

    protected override async Task OnInitializedAsync()
    {
        if (user != null)
        {
            Debts = DbContexty.Debts.Where(d => d.User.Id == user).OrderBy(d => d.Balance).ToList();
        }

    }
}

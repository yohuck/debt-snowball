@page "/debt"
@using System.ComponentModel.DataAnnotations
@using Microsoft.AspNetCore.Identity
@using debt_snowball.Data

@inject UserManager<ApplicationUser> UserManager
@inject SignInManager<ApplicationUser> SignInManager
@inject IdentityUserAccessor UserAccessor
@inject IdentityRedirectManager RedirectManager
@inject ApplicationDbContext DbContext

<PageTitle>User Debts</PageTitle>

<h1>Your Debts</h1>

@user?.Email hello friend

@if (debts != null && debts.Any())
{
    <table>
        <thead>
            <tr>
                <th>Name</th>
                <th>Rate</th>
                <th>Balance</th>
                <th>Minimum Payment</th>
                <th>Due Day</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var debt in debts)
            {
                <tr>
                    <td>@debt.Name</td>
                    <td>@debt.Rate</td>
                    <td>@debt.Balance</td>
                    <td>@debt.MinimumPayment</td>
                    <td>@debt.DueDay</td>
                </tr>
            }
        </tbody>
    </table>
}
else
{
    <p>No debts found.</p>
}


<!-- Debt Submission Form -->
<EditForm Model="@Input" OnValidSubmit="@HandleSubmit" FormName="DebtForm">
    <DataAnnotationsValidator />

    <div>
        <label for="name">Debt Name:</label>
        <InputText id="name" @bind-Value="Input.Name" />
    </div>
    <div>
        <label for="rate">Interest Rate (%):</label>
        <InputNumber id="rate" @bind-Value="Input.Rate" />
    </div>
    <div>
        <label for="balance">Balance:</label>
        <InputNumber id="balance" @bind-Value="Input.Balance" />
    </div>
    <div>
        <label for="minPayment">Minimum Payment:</label>
        <InputNumber id="minPayment" @bind-Value="Input.MinimumPayment" />
    </div>
    <div>
        <label for="dueDay">Due Day (Day of the Month):</label>
        <InputNumber id="dueDay" @bind-Value="Input.DueDay" />
    </div>

    <button type="submit">Add Debt</button>
</EditForm>

@code {
    private List<Debt> debts;
    private ApplicationUser user = default!;
    private string? username;
    private string? phoneNumber;

    [CascadingParameter]
    private HttpContext HttpContext { get; set; } = default!;

    [SupplyParameterFromForm]
    private DebtInputModel Input { get; set; } = new DebtInputModel();

    protected override async Task OnInitializedAsync()
    {
        user = await UserAccessor.GetRequiredUserAsync(HttpContext);
        debts = DbContext.Debts.Where(d => d.User == user).ToList();
    }

    private async Task HandleSubmit()
    {
        var newDebt = new Debt
            {
                Name = Input.Name,
                Rate = Input.Rate,
                Balance = Input.Balance,
                MinimumPayment = Input.MinimumPayment,
                DueDay = Input.DueDay,
                User = user
            };

        DbContext.Debts.Add(newDebt);
        await DbContext.SaveChangesAsync();
        debts = DbContext.Debts.Where(d => d.User == user).ToList();
    }

    private sealed class DebtInputModel
    {
        [Required]
        public string Name { get; set; }

        [Required]
        [Range(0, double.MaxValue)]
        public double Rate { get; set; }

        [Required]
        [Range(0, double.MaxValue)]
        public double Balance { get; set; }

        [Required]
        [Range(0, double.MaxValue)]
        public double MinimumPayment { get; set; }

        [Required]
        [Range(1, 31)]
        public int DueDay { get; set; } // Day of the month for the due date
    }
}

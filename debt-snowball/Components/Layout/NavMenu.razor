@implements IDisposable

@inject NavigationManager NavigationManager



<div class="" >
    <nav class="bg-black flex p-2 gap-5 justify-between">

        <NavLink class="p-1 text-white no-underline" href="" Match="NavLinkMatch.All">
            <span class="no-underline hover:underline">Debt Snowball</span>
        </NavLink>
        <div class="flex gap-2">
       

         

            <NavLink class="no-underline hover:underline" href="counter">
                Counter
            </NavLink>


            <NavLink class="text-white no-underline" href="weather">
                Weather
            </NavLink>



            <NavLink class="text-white no-underline" href="auth">
                Auth Required
            </NavLink>


            <AuthorizeView>
                <Authorized>

                    <NavLink class="text-white no-underline" href="Account/Manage">
                        @context.User.Identity?.Name
                    </NavLink>


                    <NavLink class="text-white no-underline" href="Debt">
                        Your Debt
                    </NavLink>


                    <form action="Account/Logout" method="post">
                        <AntiforgeryToken />
                        <input type="hidden" name="ReturnUrl" value="@currentUrl" />
                        <button type="submit" class="">
                            Logout
                        </button>
                    </form>

                </Authorized>
                <NotAuthorized>

                    <NavLink class="p-1 text-white no-underline" href="Account/Register">
                        Register
                    </NavLink>


                    <NavLink class="p-1 text-white no-underline" href="Account/Login">
                        Login
                    </NavLink>

                </NotAuthorized>
            </AuthorizeView>
         </div>

      



       
    </nav>
</div>

@code {
    private string? currentUrl;

    protected override void OnInitialized()
    {
        currentUrl = NavigationManager.ToBaseRelativePath(NavigationManager.Uri);
        NavigationManager.LocationChanged += OnLocationChanged;
    }

    private void OnLocationChanged(object? sender, LocationChangedEventArgs e)
    {
        currentUrl = NavigationManager.ToBaseRelativePath(e.Location);
        StateHasChanged();
    }

    public void Dispose()
    {
        NavigationManager.LocationChanged -= OnLocationChanged;
    }
}

